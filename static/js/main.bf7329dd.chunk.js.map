{"version":3,"sources":["components/item/offline.png","components/item/item.js","config/particlesConfig.js","components/home/home.js","components/detalle/offline.png","components/detalle/detail.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Item","props","state","items","url","Offline","load","goDetail","bind","onError","onErrorVideo","fetch","then","res","json","itemsActualizado","push","setState","console","log","this","getdata","data","className","Card","onClick","CardActionArea","media_type","src","alt","width","height","CardContent","title","date","Component","particlesConfig","Home","day","Date","index","getFullYear","getMonth","getDate","setDate","dayString","getToday","localStorage","setItem","JSON","stringify","LSdata","parse","getItem","LSday","item","elements","map","id","style","position","params","breakpointCols","default","1100","700","500","columnClassName","elevation","Detail","Container","fixed","class","goBack","copyright","explanation","App","itemFromHome","view","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bf7329dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/offline.9fdba865.png\";","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport './item.css';\r\n//para utilizar en el precaheado \r\nimport Offline from './offline.png';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\n\r\n\r\nclass Item extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            url:Offline,\r\n            load: false\r\n        }\r\n\r\n        //solucion al problema de perder el contexto del this de clase\r\n        this.goDetail = this.goDetail.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n        this.onErrorVideo = this.onErrorVideo.bind(this);\r\n    }\r\n\r\n    getdata(){\r\n        const url = \"https://api.nasa.gov/planetary/apod?api_key=eHlZc7hYrWkwuKKS2E5hYKgztsd50fhKKtaPrga2\";\r\n        \r\n        fetch(url) \r\n        .then(res => res.json()) //me convierta esos datos en un objeto JSon\r\n        .then(res =>{ //ya puedo tratar los datos\r\n            let itemsActualizado = this.state.items;//recupero el dato\r\n            itemsActualizado.push(res); //a√±ado el dato al objeto\r\n            this.setState({\r\n                items:itemsActualizado\r\n            });\r\n\r\n            console.log(res)\r\n            console.log(this.state.items);\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el compoennte este montado\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.setState({\r\n            url: this.props.data.url\r\n        });\r\n    }\r\n\r\n    //funcion para ir al componente Detail\r\n    goDetail(){\r\n        //enviando los datos mediante data\r\n        this.props.goDetail(this.props.data);\r\n        //se pierde la referencia del this de la clase al de la funcion realizamos un blind\r\n        //Este metodo hace referencia al componente padre HOME\r\n    }\r\n\r\n    //el cambio de los elementos debe realizarse desde los estados\r\n    //para tener un estado que podamos cambiar\r\n    // <a href='https://www.freepik.es/vectores/fondo'>Vector de Fondo creado por BiZkettE1 - www.freepik.es</a>\r\n    onError(){\r\n        //cuando se esta offline y se necesita tener algo en la cache\r\n        this.setState({\r\n            url: Offline\r\n        });\r\n    }\r\n\r\n    onErrorVideo(){\r\n\r\n        console.log('error de la carga del video');\r\n\r\n        this.setState({\r\n            url: Offline,\r\n            load: true\r\n        });\r\n\r\n        console.log(this.state.load);\r\n    }\r\n\r\n    render(){\r\n\r\n\r\n        return (\r\n                <div className=\"divcards\">\r\n\r\n                {/*Prueba de codigo material*/}\r\n                <Card className=\"cards\" onClick={this.goDetail}>\r\n                    <CardActionArea className=\"cardcontent\">\r\n                        <li className='itemcards'>\r\n                    {this.props.data.media_type === 'image'\r\n                    ? <div>\r\n                        {/* <img src={this.props.data.url} alt=\"Imagen del dia\" onError={this.onError}></img> */}\r\n                        <img src={this.state.url} alt=\"Imagen del dia\" onError={this.onError}></img>\r\n                      </div>\r\n                    : <div className='divideo' onClick={this.goDetail}>\r\n\r\n                        {this.state.load \r\n                        ?<img className=\"offline\" src={this.state.url} alt=\"Sin conexion\"></img>\r\n                        :<ReactPlayer \r\n                        width='100%'\r\n                        height='100%'\r\n                        onError={this.onErrorVideo}\r\n                        url={this.state.url}/>}\r\n\r\n                      </div>\r\n                    }\r\n                </li>\r\n                        <CardContent className=\"cardcontent\">\r\n                        {/* <Typography  gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {this.props.data.title}\r\n                        </Typography> */}\r\n                        <h2>{this.props.data.title}</h2>\r\n                        <hr></hr>\r\n                        <h4>See more</h4>\r\n                        <h5>{this.props.data.date}</h5>\r\n                        \r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    \r\n                </Card>\r\n\r\n                \r\n                \r\n            </div>    \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Item;\r\n\r\n","const particlesConfig = {\r\n\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 160,\r\n      \"density\": {\r\n        \"enable\": true,\r\n        \"value_area\": 800\r\n      }\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#ffffff\"\r\n    },\r\n    \"shape\": {\r\n      \"type\": \"circle\",\r\n      \"stroke\": {\r\n        \"width\": 0,\r\n        \"color\": \"#000000\"\r\n      },\r\n      \"polygon\": {\r\n        \"nb_sides\": 5\r\n      },\r\n      \"image\": {\r\n        \"src\": \"img/github.svg\",\r\n        \"width\": 100,\r\n        \"height\": 100\r\n      }\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 1,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": true,\r\n        \"speed\": 1,\r\n        \"opacity_min\": 0,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"size\": {\r\n      \"value\": 3,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 4,\r\n        \"size_min\": 0.3,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": false,\r\n      \"distance\": 150,\r\n      \"color\": \"#ffffff\",\r\n      \"opacity\": 0.4,\r\n      \"width\": 1\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 1,\r\n      \"direction\": \"none\",\r\n      \"random\": true,\r\n      \"straight\": false,\r\n      \"out_mode\": \"out\",\r\n      \"bounce\": false,\r\n      \"attract\": {\r\n        \"enable\": false,\r\n        \"rotateX\": 600,\r\n        \"rotateY\": 600\r\n      }\r\n    }\r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"canvas\",\r\n    \"events\": {\r\n      \"onhover\": {\r\n        \"enable\": true,\r\n        \"mode\": \"grab\"\r\n      },\r\n      \"onclick\": {\r\n        \"enable\": true,\r\n        \"mode\": \"repulse\"\r\n      },\r\n      \"resize\": true\r\n    },\r\n    \"modes\": {\r\n      \"grab\": {\r\n        \"distance\": 400,\r\n        \"line_linked\": {\r\n          \"opacity\": 1\r\n        }\r\n      },\r\n      \"bubble\": {\r\n        \"distance\": 250,\r\n        \"size\": 0,\r\n        \"duration\": 2,\r\n        \"opacity\": 0,\r\n        \"speed\": 3\r\n      },\r\n      \"repulse\": {\r\n        \"distance\": 400,\r\n        \"duration\": 0.4\r\n      },\r\n      \"push\": {\r\n        \"particles_nb\": 4\r\n      },\r\n      \"remove\": {\r\n        \"particles_nb\": 2\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n  \r\n}\r\n\r\nexport default particlesConfig;","import React, { Component } from 'react';\r\nimport Item from '../item/item';\r\nimport './home.css';\r\nimport Masonry from 'react-masonry-css';\r\nimport Particles from 'react-particles-js';\r\nimport particlesConfig from '../../config/particlesConfig';\r\n\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            day: new Date(),\r\n            index: 0\r\n        }\r\n\r\n        this.goDetail = this.goDetail.bind(this);\r\n        \r\n    }\r\n\r\n    getToday(day){\r\n        //pedir el dia en concrento\r\n        return day.getFullYear() + '-' + (day.getMonth() + 1) + '-' + day.getDate()\r\n    }\r\n\r\n    getdata(){\r\n        let index = this.state.index; //recuperar el index\r\n        let day = new Date(this.state.day); //recupero el dia hace la referencia la estado reazamos una instancia una clonacion\r\n\r\n        day.setDate(day.getDate() - 1 * index);//ponemos por el index para que en la primera iteracion nos devuelva el dia de hoy\r\n\r\n        const dayString = this.getToday(day)\r\n\r\n        const url = \"https://api.nasa.gov/planetary/apod?api_key=eHlZc7hYrWkwuKKS2E5hYKgztsd50fhKKtaPrga2&date=\"+dayString;\r\n        \r\n        fetch(url) \r\n        .then(res => res.json()) //me convierta esos datos en un objeto JSon\r\n        .then(res =>{ //ya puedo tratar los datos\r\n            let itemsActualizado = this.state.items;//recupero el dato\r\n            itemsActualizado.push(res); //a√±ado el dato al objeto\r\n            index += 1;//actu√±aizamos el valor antes de guardarlo en el stado\r\n\r\n            this.setState({\r\n                items:itemsActualizado,\r\n                index:index\r\n            });\r\n\r\n            \r\n\r\n            if(index < 15){ //si es menor a 15 registros debe volver a llamar \r\n                this.getdata(); //pedimos los datos\r\n            }else{\r\n                localStorage.setItem('nasa_data', JSON.stringify(itemsActualizado)); //convertir los datos en JSON\r\n                localStorage.setItem('nasa_day', this.getToday(this.state.day))\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el compoennte este montado\r\n    componentDidMount(){\r\n        //los posibles datos y guardalos en LocalStorege\r\n        const LSdata = JSON.parse(localStorage.getItem('nasa_data'));//como los datos son convertidos en JSON debo convertirlos nuevamente a Objetos\r\n        const LSday = localStorage.getItem('nasa_day');\r\n\r\n        if(!LSdata || LSday !== this.getToday(this.state.day)){\r\n            this.getdata();//pedimos los datos\r\n        }else{\r\n            this.setState({\r\n                items: LSdata // asi estan disponibles y se renderizar\r\n            }) //asociecie a los items los datos recuperados en LSdata\r\n        }\r\n    }\r\n\r\n    //la funcion encargada de enlazar al compoenente\r\n    goDetail(item){\r\n        this.props.goDetail(item);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        //crear el bucle para la lectura de los datos no se debe poner en el return\r\n        const { items } = this.state;//recuperamos las items\r\n        const elements = items.map((item,index) =>{ //me permite mapear el arreglo tienen arroy function\r\n            //item es cada uno de los elementos y el index es cada index\r\n            return <Item data={item} key={index} goDetail={this.goDetail}></Item>\r\n        })\r\n\r\n        const breakpoints = {\r\n            default:4,\r\n            1100: 3,\r\n            700: 2,\r\n            500: 1\r\n        }\r\n\r\n        return (\r\n            //La propiedad goDetail hace referencia a la funcion goDetail del mismo componente\r\n            <div className=\"home\" goDetail={this.goDetail}>\r\n                \r\n                <div id=\"particle-canvas\" className=\"space\" style={{ position: 'absolute'}}>\r\n                    <Particles height=\"100vh\" width=\"100vw\" params={particlesConfig} />\r\n                </div>\r\n\r\n                <h3>NASA day of the day</h3>\r\n                \r\n                <Masonry\r\n                    breakpointCols={breakpoints}\r\n                    className=\"my-masonry-grid\"\r\n                    columnClassName=\"my-masonry-grid_column\"\r\n                    elevation={3}\r\n                >    \r\n                    { elements }\r\n\r\n                </Masonry>\r\n\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/offline.9fdba865.png\";","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport './detail.css';\r\nimport Offline from './offline.png';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass Detail extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            url: Offline,\r\n            load: false\r\n        }\r\n\r\n        this.onErrorVideo = this.onErrorVideo.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            url: this.props.data.url\r\n        });\r\n    }\r\n\r\n    onErrorVideo(){\r\n\r\n        this.setState({\r\n            url: Offline,\r\n            load: true\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n\r\n        return (\r\n        \r\n        <Container fixed>\r\n        \r\n      \r\n            <div class=\"card\">\r\n                <div className=\"button_back\" onClick={this.props.goBack}>Back</div>\r\n                <div class=\"col2\">\r\n                    {this.props.data.media_type === 'image'\r\n                    ? <div>\r\n                        <img src={this.props.data.url} alt=\"Imagen del dia\"></img>\r\n                      </div>\r\n                    : <div className='divideodetail' onClick={this.goDetail}>\r\n                        {/* <ReactPlayer \r\n                        width='100%'\r\n                        height='100%'\r\n                        onError={this.onErrorVideo}\r\n                        // url={this.props.data.url}/>\r\n                        url={this.state.url}/>\r\n\r\n                        {this.state.load \r\n                        ?<p>True</p>\r\n                        :<p>False</p>}\r\n                        {view} */}\r\n\r\n                        \r\n                        {this.state.load \r\n                        ?<img className=\"offline\" src={this.state.url} alt=\"Sin conexion\"></img>\r\n                        :<ReactPlayer \r\n                        width='100%'\r\n                        height='100%'\r\n                        onError={this.onErrorVideo}\r\n                        url={this.state.url}/>}\r\n\r\n                      </div>\r\n                    }\r\n                    <p>{this.props.data.copyright} / {this.props.data.date}</p>\r\n                    \r\n                    \r\n                </div>    \r\n                <div class=\"col1\">\r\n                    <h1>{this.props.data.title}</h1>\r\n                    <p>{this.props.data.explanation}</p>\r\n                    {this.state.load && <h4>you are offline the content will be loaded when you have internet</h4>}\r\n                </div>\r\n          </div>\r\n\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import { Component } from \"react\";\nimport Home from './components/home/home';\nimport Detail from './components/detalle/detail';\nimport Particles from 'react-particles-js';\nimport particlesConfig from './config/particlesConfig';\nimport './App.css';\n\nclass App extends Component{\n  \n  constructor(props){\n    super(props);\n\n    this.state = {\n      item: null\n    }\n\n    this.goDetail = this.goDetail.bind(this);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  //funcion para retomar\n  goBack(){\n    this.setState({\n      item: null\n    })\n  }\n\n  //funcion del padre viene trayendo elementos \n  goDetail(itemFromHome){\n    //actualizamos el estado con el item que traemos\n    this.setState({\n      item: itemFromHome\n    })\n  }\n\n  render(){\n\n    const { item } = this.state;\n    let view = <Home goDetail={this.goDetail} ></Home> // Le asignamos de entrada un valor predeterminado la vista principal\n\n    if( item ){\n      view = <Detail goBack={this.goBack} data={this.state.item}></Detail>\n      //pasmos el item que clicleamos es decir el elemento\n    }\n\n    return(\n\n      \n\n\n\n    <div className=\"App\" > \n\n      {/* <header className=\"App-header\"></header> */}\n      <header>\n        <section id=\"logo\"> <img src=\"/assets/logoNASA.png\"/> </section>\n        <h2>NASA</h2>\n      </header>\n      \n                \n\n      {view} {/* llammamos a la vista y se renderiza */}\n\n      <footer>\n      \n      <h4>NASA copyright ¬©</h4>\n\n      </footer>\n      \n    </div>\n    )\n  };\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}